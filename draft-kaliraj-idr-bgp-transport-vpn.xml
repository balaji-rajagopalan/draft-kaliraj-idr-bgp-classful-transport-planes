<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<rfc category="exp" docName="draft-kaliraj-idr-bgp-transport-vpns-00"
     ipr="trust200902">
  <front>
    <title abbrev="BGP Transport VPNs">BGP Transport VPNs</title>

    <author fullname="Kaliraj Vairavakkalai" initials="K."
            surname="Vairavakkalai">
      <organization>Juniper Networks, Inc.</organization>

      <address>
        <postal>
          <street>1133 Innovation Way,</street>

          <city>Sunnyvale</city>

          <region>CA</region>

          <code>94089</code>

          <country>US</country>
        </postal>

        <email>kaliraj@juniper.net</email>
      </address>
    </author>

    <author fullname="Natarajan Venkataraman" initials="N."
            surname="Venkataraman">
      <organization>Juniper Networks, Inc.</organization>

      <address>
        <postal>
          <street>1133 Innovation Way,</street>

          <city>Sunnyvale</city>

          <region>CA</region>

          <code>94089</code>

          <country>US</country>
        </postal>

        <email>natv@juniper.net</email>
      </address>
    </author>

    <author fullname="Balaji Rajagopalan" initials="B." surname="Rajagopalan">
      <organization>Juniper Networks, Inc.</organization>

      <address>
        <postal>
          <street>Electra, Exora Business Park~Marathahalli - Sarjapur Outer
          Ring Road,</street>

          <city>Bangalore</city>

          <region>KA</region>

          <code>560103</code>

          <country>India</country>
        </postal>

        <email>balajir@juniper.net</email>
      </address>
    </author>

    <author/>

    <date day="29" month="December" year="2019"/>

    <abstract>
      <t>In a network, we may have multiple transport-tunnels (MPLS LSPs,
      IP-tunnels) from endpoints Sx to Dx. There may also be multiple LSPs
      from a Sn to Dn. Each tunnel may have a certain TE-characteristic. These
      TE-characterstics can be broadly classified into different
      transport-classes (e.g. gold, silver, toAS100 etc).</t>

      <t>This document describes how these tunnels can be advertised in BGP to
      speakers in the same or other domains, such that service-nodes that
      intend to use a specific transport-class can map traffic to these
      tunnels, irrespective of whether the destination service-endpoint is in
      same domain or a different domain.</t>

      <t>A new BGP transport address-family is defined for this purpose, that
      uses BGP-VPN technology (RFC 4364) and follows RLI-8277 NLRI encoding.
      This new address-family is called "Transport VPNs".</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119">RFC 2119</xref>.</t>
    </note>
  </front>

  <middle>
    <section title="Introduction">
      <t>In a network, the nature of the path from Sx to Dx can be broadly
      classified into different transport-classes (e.g. traversing-gold-LSPs,
      traversing-silver-LSPs, exiting-to-AS100, etc). Multiple such paths
      could exist to a Dx.</t>

      <t>Further, different signaling protocols may be used in different
      tunnel-domains in the network. Examples of tunnel-domain are an
      Autonomous-system or IGP-area. A tunneling-domain boundary is demarcated
      by rewrite of BGP nexthop to self while re-advertising transport-routes
      in BGP. This allows creating an end-to-end tunnelled path that belongs
      to a specific traffic-class and spans heterogenous tunnel types. The
      path uses MPLS label-switching when crossing inter-AS links and uses the
      native intra-AS tunnel of the desired traffic-class, when traversing
      within a domain.</t>

      <t>The tunnel-endpoint also acts as "Service endpoint" and is carried as
      Nexthop (aka PNH) field in a BGP route update. The Service-endpoint may
      exist in the same tunnel-domain as the Service Ingress-node or in an
      adjacent/non-adjacent domain.</t>

      <t>Service-routes may want to reach the service-endpoint (PNH) using a
      certain traffic-class, notwithstanding whether the service-endpoint is
      in the same domain or a different domain, or which protocol signals the
      tunnel in each domain. This document describes mechanisms to: <list>
          <t>Model a "transport-class" as transport-rib, to collect tunnel
          ingress-routes of a certain class.</t>

          <t>Let service-routes resolve over an intended transport-class by
          using the corresponding transport-rib for finding nexthop
          reachability. aka. "service-mapping"</t>

          <t>Advertise tunnel ingress-routes in a "transport-rib" to other
          domains without any path-hiding, using BGP VPN technology and
          Add-path. Such that services in those domains can also resolve over
          tunneled-paths in this transport-class.</t>

          <t>Provide a way for cooperating domains to reconcile between
          independently administered extended-community namespaces, and
          interoperate between different transport signaling-protocols in each
          domain.</t>
        </list></t>

      <t>In this document we focus mainly on MPLS LSPs as transport-tunnels,
      but the mechanisms would work in similar manner for non-mpls
      transport-tunnels also.</t>
    </section>

    <section title="Terminology">
      <t>LSP: Label Switched Path</t>

      <t>TE : Traffic Engineering</t>

      <t>SN : Service Node</t>

      <t>BN : Border Node</t>

      <t>TN : Transport Node, P-router</t>

      <t>BGP-VPN : VPNs built using RFC-4364 mechanisms</t>

      <t>RT : Route-Target extended community</t>

      <t>RD : Route-Distinguisher</t>

      <t>PNH : Protocol-Nexthop</t>

      <t>Service-Famiily : BGP address-family that carries as NLRI, prefixes
      that are destination-field in data-traffic packets.</t>

      <t>Transport-Famiily : BGP address-family that carries as NLRI, prefixes
      that will be PNH in other Service-family routes</t>

      <t>Transport-Tunnel : Tunnel using a certain tunneling technology (e.g.
      GRE, UDP, LDP, RSVP, SRTE), can carry various payload-types</t>

      <t>Tunnel-Domain : A region of network (AS or intra-AS-region)
      containing SN, BN, and connected via a Transport-tunnel type. We can use
      MPLS label-switching between these tunnel-domains, to stitch
      transport-tunnels of different-types.</t>

      <t>Transport-Class : A "set of TE-characteristics" of Transport-tunnels.
      aka Transport-Color.</t>

      <t>TransportClass-RT : A BGP-VPN Route-Target used to identify a
      specific "Transport-class"</t>

      <t>Transport-RIB : A transport-RTI RIB used to collect ingress-routes
      related to Tunnels of a certain transport-class</t>

      <t>Transport-VPN : Set of Transport-RTIs importing same
      TransportClass-RT. Across tunnel-domain boundaries these are stitched
      together using option-b(nexthop-self, label-swap) mechanism.</t>

      <t>Mapping-Community : Community on a service route, that maps it to
      resolve over a Transport-class</t>
    </section>

    <section title="Transport Class">
      <t>A Transport-class is defined as collection of transport-paths that
      have the same nature. E.g. a 'gold' transport-class could collect paths
      traversing over gold RSVP-LSPs, or a 'toAS100' traffic-class could
      collect BGP-LU paths exiting to a certain neighboring AS.</t>

      <t>On the wire, a transport-class is represented as the
      TransportClass-Route-Target, which is a regular Route-Target
      extended-community.</t>

      <t>A Transport-class is configured at the service-edge nodes and
      border-nodes, along with attributes like RD and Route-Target. The
      transport-class instantiates a "transport-RIB" and "transport
      Routing-instance" at the routers.</t>

      <t>The operator may configure the service-edge router to classify a
      native-protocol (e.g. RSVP, GRE, Static-LSP) tunnel into appropriate
      transport-class. The transport tunneling-protocols install the
      ingress-route for a tunnel in the appropriate transport-rib determined
      by the transport-class. Each transport-class maps to a transport-rib.
      </t>

      <t>Alternatively the transport-routes received in BGP with appropriate
      signaling-information can associate those ingress-routes to the
      appropriate transport-class. E.g. for TransportVpn family(SAFI 75)
      routes, the TransportClass-RT indicates the transport-class. For BGP-LU
      family(SAFI 4) routes, import-policy based on Communities or inter-AS
      source-peer may be used to place the route in the desired
      transport-class.</t>

      <t>When the ingress-route is received via [BGP-SRTE], which encodes the
      transport-class as an integer "Color" in the NLRI : "Color:Endpoint",
      the color can be mapped to a transport-class community/Route-Target by
      the receiving router, so that the ingress-route for "Endpoint" is
      installed in the transport-rib for the transport-class. The BGP-SRTE
      route when advertised out to BGP-speakers in other domains will be
      advertised in TransportVpn family with TransportClass-RT and a new
      label. The MPLS swap-route thus installed for the new label will pop the
      label and deliver decapsulated-traffic into the path determined by SRTE
      route.</t>
    </section>

    <section title="Transport RIB">
      <t>A Transport-RIB is a routing-only RIB that is not installed to
      forwarding. However the routes in this RIB are used to resolve
      reachability for PNH of service-routes. Transport-ribs are created when
      the transport-classes are configured.</t>

      <t>Routes that want to use a specific transport-class confine the scope
      of nexthop-resolution to the set of routes in the transport-rib
      associated with the transport-class.</t>

      <t>Routes in a transport-rib are exported out in 'Transport VPN'
      address-family.</t>
    </section>

    <section title="Transport Routing Instance">
      <t>A BGP-VPN routing-instance that is a container of the transport-ribs.
      It imports, exports routes with TransportClass-RT. Tunnel-destination
      addresses in this routing-instance's context come from the
      "provider-namespace". This is different from user-VRFs, which contain
      prefixes in "customer-namespace"</t>

      <t>The transport routing-instance uses the RD and Routing-instance
      configured for the Transport-class.</t>
    </section>

    <section title="Nexthop resolution scheme, and Mapping-community">
      <t>The service-routes may use alternative transport-ribs for resolving
      PNHs, when resolution in a primary transport-rib fails. Such ordered
      "set of transport-RIBs/classes" defined by user, is called a
      Resolution-scheme. The order specifies the intended fallback among
      transport-classes.</t>

      <t>Operator can configure Resolution-schemes to match desired fallback
      resolution, along with import-policy that maps community to these
      resolution-schemes.</t>

      <t>Mapping-community: a community or "set of attributes" on the
      service-route that maps to a Resolution-scheme. When a route is received
      with this attribute, it signifies the resolution-scheme to use when
      resolving the route's PNH.</t>
    </section>

    <section title="Transport-VPN BGP family - NLRI encoding">
      <t>The Transport-VPN family will use a new "AFI/SAFI = Inet/TransportVpn
      OR Inet6/TransportVpn".</t>

      <t>The NLRI encoding is exactly the same as RFC-4364 (AFI/SAFI = 1/128
      or 2/128). viz. as stated in Fig 1.</t>

      <figure>
        <artwork> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Length     |                 Label                 |Rsrv |S|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          RD                                   ~
~                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                          Prefix                               ~
~                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

          Figure 1: TransportVpn NLRI

- Length:

    The Length field consists of a single octet.  It specifies the
    length in bits of the remainder of the NLRI field.

    Note that the length will always be the sum of 20 (number of bits
    in Label field), plus 3 (number of bits in Rsrv field), plus 1
    (number of bits in S field), plus the length in bits of the
    prefix.

    In an MP_REACH_NLRI attribute whose SAFI is TBD, the prefix will
    be 96 bits or less if the AFI is 1 and will be 192 bits or less
    if the AFI is 2.

    As specified in [RFC4760], the actual length of the NLRI field
    will be the number of bits specified in the Length field, 
    rounded up to the nearest integral number of octets.

- Label:

    The Label field is a 20-bit field containing an MPLS label value
    (see [RFC3032]).

- Rsrv:

    This 3-bit field SHOULD be set to zero on transmission and MUST
    be ignored on reception.

- S:

    This 1-bit field MUST be set to one on transmission and MUST be
    ignored on reception.</artwork>
      </figure>

      <t>Attributes on a Transport-VPN route include the Route-target
      extended-community, which is used to leak the route into the right
      transport-ribs on service-nodes and border-nodes in the network.</t>

      <t>We use a new AFI/SAFI instead of re-using SAFI 128 to carry these
      transport-routes, because it is operationally advantageous to keep
      transport and service prefixes separate, and not mix in same
      address-family. It allows to safely enable per-prefix-label allocation
      for transport-VPN prefixes while not affecting SAFI 128
      service-prefixes. Also, transport-family re-advertisement path in a
      network would be different than service-route readvertisement path. viz.
      Service-routes are exchanged over a EBGP multihop session between
      Autonomous-systems with nexthop unchanged; where-as transport-VPN routes
      will need to be readvertised over EBGP single-hop sessions with
      nexthop-self rewrite over inter-AS links.</t>
    </section>

    <section title="Comparison with other families using RFC-8277 encoding">
      <t>SAFI 128 (InetVpn) is a RFC-8277 encoded family, that carries
      service-prefixes in the NLRI, where the prefixes come from the customer
      namespaces, and are contexualized into separate user virtual
      service-RIBs called VRFs, using RFC-4364 procedures.</t>

      <t>SAFI 4 (BGP-LU) is a RFC-8277 encoded family, that carries
      transport-prefixes in the NLRI, where the prefixes come from the
      provider namespace.</t>

      <t>SAFI 75 (TransportVpn) is a RFC-8277 encoded family, that carries
      transport-prefixes in the NLRI, where the prefixes come from the
      provider namespace, but are contexualized into separate transport-RIBs,
      using RFC-4364 procedures.</t>

      <t>It is worth noting that SAFI 128 has been used to carry
      transport-prefixes in "L3VPN Inter-AS Carrier's carrier" scenario, where
      BGP-LU/LDP prefixes in CsC VRF are advertised in SAFI 128 to the
      remote-end baby carrier. </t>

      <t>In this document we use a new AFI/SAFI instead of re-using SAFI 128
      to carry these transport-routes, because it is operationally
      advantageous to keep transport and service prefixes separate, and not
      mix in same address-family or rib. E.g. it allows to safely enable
      per-prefix-label allocation for transport-VPN prefixes while not
      affecting SAFI 128 service-prefixes which have huge-scale. Also,
      re-advertisement path of transport-family routes in a network would be
      different than service-route readvertisement path. viz. Service-routes
      are exchanged over a EBGP multihop session between Autonomous-systems
      with nexthop unchanged; where-as transport-VPN routes are readvertised
      over EBGP single-hop sessions with nexthop-self rewrite over inter-AS
      links.</t>

      <t>This family TransportVpn is similar in vein to BGP-LU, in that it
      carries transport-prefixes. The only difference is, it also carries
      indication (the RT) of which transport-class those transport-prefixes
      belong to, and has means (like RD) to disambiguate multiple instances of
      the same transport-prefix when carried in BGP update messages. </t>
    </section>

    <section title="Protocol procedures">
      <t>This section summarizes the procedures followed by various nodes
      speaking Transport-VPN family</t>

      <t>Preparing the network for deploying Transport-VPNs</t>

      <t><list>
          <t>Operator decides on the Transport-Classes that exist in the
          network, and allocates a Route-Target to identify each
          Transport-Class.</t>

          <t>Operator configures Transport-Classes on the SNs and BNs in the
          network with unique Route-Distinguishers and Route-Targets.</t>

          <t>Implementations may provide automatic-generation and assignment
          of RD, RT values for a transport routing-instance; they should also
          provide a way to override the automatic mechanism, in order to deal
          with any conflicts that may arise with existing RD, RT values in the
          network.</t>
        </list></t>

      <t>Origination of Transport-VPN route:</t>

      <t><list>
          <t>At the ingress-node of the tunnel's home-domain, the tunneling
          protocols install routes in transport-rib associated with the
          transport-class the tunnel belongs to. The ingress-node then
          advertises this tunnel-route into BGP as a Transport-VPN route, with
          NLRI RD:TunnelEndpoint, attaching a Route-Target that identifies the
          transport-class.</t>

          <t>Alternatively, the egress-node of the tunnel i.e. the
          tunnel-endpoint can originate the BGP Transport-VPN route, with NLRI
          RD:TunnelEndpoint and PNH=TunnelEndpoint, which will resolve over
          the tunnel-route at the ingress-node. When the tunnel is up, the
          Transport-VPN route will become usable and get re-advertised.</t>
        </list></t>

      <t>Ingress-node receiving transport-VPN route<list>
          <t>On receiving a BGP transport-vpn route with a PNH that is not
          directly connected, e.g. an IBGP-route, the Route-Target on the
          route indicates which transport-class this route belongs to. The
          routes in the associated transport-rib are used to resolve the
          received PNH. If there does not exist a route in the transport-rib
          for the PNH, the transport-vpn route is considered un-usable, and
          MUST not be re-advertised further.</t>
        </list></t>

      <t>Border-node readvertising transport-VPN route with nexthop self:<list>
          <t>Allocates a MPLS label to advertise upstream in transport-vpn
          NLRI</t>

          <t>Installs a MPLS swap-route for that label, that pops the label
          and pushes received-traffic to the transport-tunnel or
          direct-interface that the transport-vpn route's PNH resolved
          over.</t>
        </list></t>

      <t>Border-node receiving transport-VPN route on EBGP :<list>
          <t>If the route is received with PNH that is known to be directly
          connected, e.g. EBGP single-hop peering-address, the directly
          connected interface is checked for MPLS-forwarding capability. No
          other nexthop resolution process is undergone, this assumes the
          inter-AS link can be used for any transport-class.</t>

          <t>If the inter-AS links need to be confined to be used for a
          specific transport-class, then the BN should follow procedures of an
          Ingress-node described above, and undergo nexthop resolution
          process. The interface-routes should be installed in the
          transport-rib belonging to the associated transport-class.</t>
        </list></t>

      <t>Avoiding path-hiding thru Route-reflectors<list>
          <t>When multiple BNs exist that advertise a RDn:PEn prefix to RRs,
          the RRs may hide all but one of the BNs, unless [ADDPATH] is used
          for the Transport-VPN family. This is similar to L3VPN option-B
          scenarios. Hence [ADDPATH] should be used for Transport-VPN family,
          to avoid path-hiding thru RRs.</t>
        </list></t>

      <t>Ingress-node receiving service-route with Mapping community<list>
          <t>Service-routes received with Mapping-community resolve using
          transport-rib associated with the mapped transport-class. If the
          resolution-process does not find an usable transport-vpn route or
          tunnel-route, the service-route MUST be considered un-usable for
          forwarding purpose.</t>
        </list></t>

      <t>Coordinating between domains using different community
      namespaces.<list>
          <t>Domains not agreeing on RT, RD, Mapping-community values because
          of independently administered community namespaces may deploy
          mechanisms to map and rewrite the Route-target values on domain
          boundaries, using per ASBR import-policies. This is no different
          than any other BGP VPN family. The mechanisms employed in inter-AS
          VPN deployments may be used with the transport-vpn family also.</t>

          <t>Though RD can also be rewritten on domain boundaries, we
          recommend deploying unique RDs as much as feasible, because it helps
          in trouble-shooting by uniquely identifying originator of a route,
          and avoids path-hiding.</t>
        </list></t>
    </section>

    <section title="OAM considerations">
      <t>TBD</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document makes following requests of IANA.</t>

      <t>New BGP SAFI code for "Transport-VPN". Value 75.</t>

      <t>This will be used to create new AFI,SAFI pairs for IPv4, IPv6
      Transport-Vpn families. viz:</t>

      <t><list style="symbols">
          <t>"Inet, Transport-Vpn". AFI/SAFI = "1/75" for carrying IPv4
          transport-VPN prefixes.</t>

          <t>"Inet6, Transport-Vpn". AFI/SAFI = "2/75" for carrying IPv6
          transport-VPN prefixes.</t>
        </list></t>

      <t>Note to RFC Editor: this section may be removed on publication as an
      RFC.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>Mechanisms described in this document dont have any adverse impact on
      security of a network.</t>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>The authors thank Jeff Haas, John Scudder, Navaneetha Krishnan, Ravi
      M R, Chandrasekar Ramachandran, Shradha Hegde, Richard Roberts,
      Krzysztof Szarkowicz, John E Drake, Srihari Sangli, Vijay Kestur,
      Santosh Kolenchery for the valuable discussions.</t>

      <t>The decision to not reuse SAFI 128 and create a new address-family to
      carry these transport-routes was based on suggestion made by Richard
      Roberts and Krzysztof Szarkowicz.</t>
    </section>

    <section anchor="References" title="References">
      <t>[RFC-4364] BGP/MPLS IP Virtual Private Networks (VPNs)</t>

      <t>[RFC-8277] Using BGP to Bind MPLS Labels to Address Prefixes</t>

      <t>[ADDPATH] RFC-7911 - Advertisement of Multiple Paths in BGP</t>

      <t>[BGP-SRTE] Advertising Segment Routing Policies in BGP,
      draft-ietf-idr-segment-routing-te-policy-08</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.2119"?>
    </references>
  </back>
</rfc>
